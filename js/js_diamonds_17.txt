# Map

## Map
	Map is a collection of keyed data items,
	just like an Object.
	
	But the main difference is that Map allows
	keys of any type.
	!!! Map can also use objects as keys. !!! ( saved in variables )
	
	The main methods are:
	
		-  new Map()  -  creates the map
		-  map.set(key, value)  -  stores the value by the key
		-  map.get(key)  -  returns the value by the key, undefined if key doesn't exist in the map
		-  map.has(key)  -  returns true if the key exists, false otherwise
		-  map.delete(key)  -  removes the value by the key.
		-  map.clear()  -   clears the map
		-  map.size()  -  returns the current element count. 

	
Using objects as keys is one of most notable and important Map features. For string keys, Object can be fine, but it would be difficult to replace the Map with a regular Object in the example above.

**
To test values for equivalence, Map uses the algorithm SameValueZero. It is roughly the same as strict equality ===, but the difference is that NaN is considered equal to NaN. So NaN can be used as the key as well.
**

Every map.set call returns the map itself, so we can “chain” the calls:

map.set('1', 'str1')
  .set(1, 'num1')
  .set(true, 'bool1');


When a Map is created, we can pass an array (or another iterable) with key-value pairs, like this:
let map = new Map(Object.entries({
  name: "John",
  age: 30
}));

Here, Object.entries returns the array of key/value pairs: [ ["name","John"], ["age", 30] ]. That’s what Map needs.

##

For looping over a map, there are 3 methods:

	map.keys() – returns an iterable for keys,
	map.values() – returns an iterable for values,
	map.entries() – returns an iterable for entries [key, value], it’s used by default in for..of.
For instance:

let recipeMap = new Map([
  ['cucumber', 500],
  ['tomatoes', 350],
  ['onion',    50]
]);

// iterate over keys (vegetables)
for (let vegetable of recipeMap.keys()) {
  alert(vegetable); // cucumber, tomatoes, onion
}

// iterate over values (amounts)
for (let amount of recipeMap.values()) {
  alert(amount); // 500, 350, 50
}

// iterate over [key, value] entries
for (let entry of recipeMap) { // the same as of recipeMap.entries()
  alert(entry); // cucumber,500 (and so on)
}
