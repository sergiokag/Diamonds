Html:

1) Some elements allow empty attributes, and these are usually those that might otherwise accept true/false values. Here’s the tricky part: The value of an empty attribute is either true or false based on the presence or absence of the attribute, regardless of its set value. In other words, both disabled="true" and disabled="false" would also disable input control.

2) Some elements are known as void elements. These elements cannot contain content, and so do not have a closing tag. The input element shown above is an example of a void element.

3) DOCTYPE switching means that browsers parse and render a document differently based on the value of the <!DOCTYPE declaration, if it's served with a Content-type:text/html response header.

4) Be careful with unquoted attribute values. It’s fine to leave a single-word value unquoted. A space-separated list of values, however, must be enclosed in quotes.
     	example:    
	<code class=php highlightsyntax><?php echo 'Hello!'; ?></code>

     	Because both values for the class attribute are not enclosed in quotes, the browser interprets it like so:
	<code class="php" highlightsyntax><?php echo 'Hello!'; ?></code>
     		
5) "XHTML5": HTML5’s XML Syntax:
    	HTML5 can also be written using a stricter, XML-like syntax.

	XHTML5 is best understood as HTML5 that’s written and parsed using the syntax rules of XML and served with a Content-type: application/xml+xhtml response header.
	-- must read: https://webkit.org/blog/68/understanding-html-xml-and-xhtml/
	-- mark: https://www.sitepoint.com/premium/books/jump-start-html5/online/ch02s02.html
